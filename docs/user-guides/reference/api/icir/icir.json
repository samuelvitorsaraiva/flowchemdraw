{
    "openapi": "3.1.0",
    "info": {
        "title": "Flowchem - ",
        "description": "Flowchem is a library to control instruments and devices commonly found in chemistry labs via an interoperable web API.",
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0a3"
    },
    "paths": {
        "/my-icir/": {
            "get": {
                "tags": [
                    "my-icir"
                ],
                "summary": "Get Device Info",
                "operationId": "get_device_info_fake_device__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceInfo"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/my-icir/ir-control/": {
            "get": {
                "tags": [
                    "my-icir",
                    "my-icir"
                ],
                "summary": "Get Component Info",
                "description": "Retrieve the component's metadata.\n\nThis endpoint provides information about the component, such as its name and associated hardware device.\n\nReturns:\n--------\nComponentInfo\n    Metadata about the component.",
                "operationId": "get_component_info_fake_device_ir_control__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ComponentInfo"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/my-icir/ir-control/acquire-spectrum": {
            "put": {
                "tags": [
                    "my-icir",
                    "my-icir"
                ],
                "summary": "Acquire Spectrum",
                "description": "Acquire an IR spectrum.\n\nArgs:\n    treated (bool): If True, perform background subtraction. If False, return a raw scan.\n\nReturns:\n    IRSpectrum: The acquired IR spectrum.",
                "operationId": "acquire_spectrum_fake_device_ir_control_acquire_spectrum_put",
                "parameters": [
                    {
                        "name": "treated",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true,
                            "title": "Treated"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IRSpectrum"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/my-icir/ir-control/stop": {
            "put": {
                "tags": [
                    "my-icir",
                    "my-icir"
                ],
                "summary": "Stop",
                "description": "Stop the ongoing IR experiment.\n\nReturns:\n    bool: True if the experiment was successfully stopped, False otherwise.",
                "operationId": "stop_fake_device_ir_control_stop_put",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/my-icir/ir-control/spectrum-count": {
            "get": {
                "tags": [
                    "my-icir",
                    "my-icir"
                ],
                "summary": "Spectrum Count",
                "description": "Get the count of acquired spectra.\n\nReturns:\n    int: The number of spectra acquired. Returns -1 if the count is None.",
                "operationId": "spectrum_count_fake_device_ir_control_spectrum_count_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "title": "Response Spectrum Count Fake Device Ir Control Spectrum Count Get"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ComponentInfo": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "default": ""
                    },
                    "parent_device": {
                        "type": "string",
                        "title": "Parent Device",
                        "default": ""
                    },
                    "type": {
                        "type": "string",
                        "title": "Type",
                        "default": ""
                    },
                    "owl_subclass_of": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Owl Subclass Of",
                        "default": [
                            "http://purl.obolibrary.org/obo/OBI_0000968"
                        ]
                    }
                },
                "type": "object",
                "title": "ComponentInfo",
                "description": "Metadata associated with flowchem components."
            },
            "DeviceInfo": {
                "properties": {
                    "manufacturer": {
                        "type": "string",
                        "title": "Manufacturer",
                        "default": ""
                    },
                    "model": {
                        "type": "string",
                        "title": "Model",
                        "default": ""
                    },
                    "version": {
                        "type": "string",
                        "title": "Version",
                        "default": ""
                    },
                    "serial_number": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "integer"
                            }
                        ],
                        "title": "Serial Number",
                        "default": "unknown"
                    },
                    "components": {
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1,
                            "format": "uri"
                        },
                        "type": "object",
                        "title": "Components",
                        "default": {}
                    },
                    "backend": {
                        "type": "string",
                        "title": "Backend",
                        "default": "flowchem v. 1.0.0a3"
                    },
                    "authors": {
                        "items": {
                            "type": "string",
                            "format": "name-email"
                        },
                        "type": "array",
                        "title": "Authors",
                        "default": []
                    },
                    "additional_info": {
                        "type": "object",
                        "title": "Additional Info",
                        "default": {}
                    }
                },
                "type": "object",
                "title": "DeviceInfo",
                "description": "Metadata associated with hardware devices."
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "IRSpectrum": {
                "properties": {
                    "wavenumber": {
                        "items": {
                            "type": "number"
                        },
                        "type": "array",
                        "title": "Wavenumber"
                    },
                    "intensity": {
                        "items": {
                            "type": "number"
                        },
                        "type": "array",
                        "title": "Intensity"
                    }
                },
                "type": "object",
                "required": [
                    "wavenumber",
                    "intensity"
                ],
                "title": "IRSpectrum",
                "description": "IR spectrum class.\n\nConsider rampy for advance features (baseline fit, etc.)\nSee e.g. https://github.com/charlesll/rampy/blob/master/examples/baseline_fit.ipynb"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    }
}